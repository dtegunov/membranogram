<m:MetroWindow x:Class="Membranogram.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:m="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:s="clr-namespace:Sparta"
        Title="Membranorama" Height="1000" Width="1600" BorderThickness="0.5" BorderBrush="{DynamicResource AccentColorBrush}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Color x:Key="HighlightDarkColor">#FFFFFFFF</Color>
            <Color x:Key="HighlightLightColor">#FFFFFFFF</Color>
            <Color x:Key="AccentDarkColor">#FFFFFFFF</Color>
            <Color x:Key="AccentColor">#FF666666</Color>
            <Color x:Key="AccentColor2">#FFFFFFFF</Color>
            <Color x:Key="AccentColor3">#FFFFFFFF</Color>
            <Color x:Key="AccentColor4">#FF000000</Color>
            <Color x:Key="LinkColor">CornflowerBlue</Color>
            <SolidColorBrush x:Key="BrandingBrush" Color="{DynamicResource LinkColor}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource AccentColor}" />
            <Style TargetType="s:ValueSlider">
                <Setter Property="Foreground" Value="Black" />
            </Style>
            <Style x:Key="HyperlinkLikeButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                <Setter Property="Cursor" Value="Hand" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ControlTemplate.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="80" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Vertical">
                <TextBlock Text="Surface" FontSize="20" />
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <s:ValueSlider Value="{Binding Path=SurfaceOffset, Mode=TwoWay}" TextFormat="Offset surface by {0} px." MinValue="-1000" MaxValue="1000" UpdateTrigger="PropertyChanged" />
                </StackPanel>
                <StackPanel Height="5" />
                <TextBlock Text="Tracing" FontSize="20" />
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <s:ValueSlider Value="{Binding Path=TraceDepth, Mode=TwoWay}" TextFormat="{}{0} px thick shell, " MinValue="0" MaxValue="1000" UpdateTrigger="PropertyChanged" />
                    <s:ValueSlider Value="{Binding Path=TraceDepthOffset, Mode=TwoWay}" TextFormat="offset by {0} px." MinValue="-1000" MaxValue="1000" UpdateTrigger="PropertyChanged" />
                </StackPanel>
                <StackPanel Height="5" />
                <TextBlock Text="Display" FontSize="20" />
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <s:ValueSlider Value="{Binding Path=OutputRangeMin, Mode=TwoWay}" TextFormat="Normalize image within {0}—" MinValue="0" MaxValue="0.99" StepSize="0.01" UpdateTrigger="PropertyChanged" />
                    <s:ValueSlider Value="{Binding Path=OutputRangeMax, Mode=TwoWay}" TextFormat="{}{0}." MinValue="0.01" MaxValue="1" StepSize="0.01" UpdateTrigger="PropertyChanged" />
                </StackPanel>
                <s:ValueSlider Value="{Binding Path=OutputLight, Mode=TwoWay}" TextFormat="Add {0} % lighting." MinValue="0" MaxValue="100" Margin="0,6,0,0" UpdateTrigger="PropertyChanged" />
                <StackPanel Height="5" />
                <TextBlock Text="Selection" FontSize="20" />
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <TextBlock Text="Position at cursor: " />
                    <TextBlock Name="TextCursorPosition" />
                </StackPanel>
                <TextBlock Name="TextSelectionStats" Margin="0,6,0,0" />
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Button Name="ButtonSelectionGrow" Content="GROW" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Click="ButtonSelectionGrow_Click" />
                    <Button Name="ButtonSelectionShrink" Content="SHRINK" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Margin="8,0,0,0" Click="ButtonSelectionShrink_Click" />
                    <Button Name="ButtonSelectionInvert" Content="INVERT" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Margin="8,0,0,0" Click="ButtonSelectionInvert_Click" />
                    <Button Name="ButtonSelectionClear" Content="CLEAR" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Margin="8,0,0,0" Click="ButtonSelectionClear_Click" />
                </StackPanel>
                <s:ValueSlider Value="{Binding Path=SelectionAngle, Mode=TwoWay}" TextFormat="Don't grow if angle is over {0} °." MinValue="0" MaxValue="180" Margin="0,6,0,0" UpdateTrigger="PropertyChanged" />
                <StackPanel Height="5" />
                <TextBlock Text="Points" FontSize="20" />
                <ListBox Name="ListBoxPoints" ItemsSource="{Binding Path=SurfacePoints}" BorderThickness="0.5" BorderBrush="{DynamicResource AccentColorBrush}" MaxHeight="200" MinHeight="100" SelectionMode="Extended" HorizontalAlignment="Stretch" Margin="0,6,0,0" SelectionChanged="ListBoxPoints_SelectionChanged">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Text}" Margin="0" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style>
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            </Style.Resources>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Button Name="ButtonPointsExport" Content="EXPORT" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Click="ButtonPointsExport_Click" />
                    <Button Name="ButtonPointsRemove" Content="REMOVE" FontWeight="Medium" Style="{StaticResource ChromelessButtonStyle}" Margin="8,0,0,0" Click="ButtonPointsRemove_Click" />
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Text="Files" FontSize="20" />
                <Button Name="ButtonMeshPath" Style="{StaticResource HyperlinkLikeButton}" Margin="0,6,0,0" Click="ButtonMeshPath_Click">
                    <TextBlock Name="ButtonMeshPathText" TextTrimming="CharacterEllipsis">Load Surface...</TextBlock>
                </Button>
                <Button Name="ButtonTomogramPath" Style="{StaticResource HyperlinkLikeButton}" Margin="0,6,0,0" Click="ButtonTomogramPath_Click">
                    <TextBlock Name="ButtonTomogramPathText" TextTrimming="CharacterEllipsis">Load Tomogram...</TextBlock>
                </Button>
            </StackPanel>
        </Grid>
        <WindowsFormsHost Name="ViewportHost" Grid.Column="1" Panel.ZIndex="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,2,2" Initialized="ViewportHost_Initialized" />
    </Grid>
</m:MetroWindow>
